{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export class TsBase64 {\n\tprivate static _b64chars: string = `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/`;\n\tprivate static _b64tab: any;\n\tprivate static _fromCharCode: any = String.fromCharCode;\n\tprivate static _re_utob: RegExp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n\n\tprivate static _cb_btou(cccc: string): string {\n\t\tswitch (cccc.length) {\n\t\t\tcase 4:\n\t\t\t\tlet cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n\t\t\t\t\t| ((0x3f & cccc.charCodeAt(1)) << 12)\n\t\t\t\t\t| ((0x3f & cccc.charCodeAt(2)) << 6)\n\t\t\t\t\t| (0x3f & cccc.charCodeAt(3)),\n\t\t\t\t\toffset = cp - 0x10000;\n\t\t\t\treturn (this._fromCharCode((offset >>> 10) + 0xD800)\n\t\t\t\t\t+ this._fromCharCode((offset & 0x3FF) + 0xDC00));\n\t\t\tcase 3:\n\t\t\t\treturn this._fromCharCode(\n\t\t\t\t\t((0x0f & cccc.charCodeAt(0)) << 12)\n\t\t\t\t\t| ((0x3f & cccc.charCodeAt(1)) << 6)\n\t\t\t\t\t| (0x3f & cccc.charCodeAt(2))\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn this._fromCharCode(\n\t\t\t\t\t((0x1f & cccc.charCodeAt(0)) << 6)\n\t\t\t\t\t| (0x3f & cccc.charCodeAt(1))\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate static _cb_decode(cccc:string): string {\n\t\tlet len = cccc.length,\n\t\t\tpadlen = len % 4,\n\t\t\tn = (len > 0 ? this._b64tab[cccc.charAt(0)] << 18 : 0)\n\t\t\t\t| (len > 1 ? this._b64tab[cccc.charAt(1)] << 12 : 0)\n\t\t\t\t| (len > 2 ? this._b64tab[cccc.charAt(2)] << 6 : 0)\n\t\t\t\t| (len > 3 ? this._b64tab[cccc.charAt(3)] : 0),\n\t\t\tchars = [\n\t\t\t\tthis._fromCharCode(n >>> 16),\n\t\t\t\tthis._fromCharCode((n >>> 8) & 0xff),\n\t\t\t\tthis._fromCharCode(n & 0xff)\n\t\t\t];\n\t\tchars.length -= [0, 0, 2, 1][padlen];\n\t\treturn chars.join('');\n\t}\n\n\tprivate static _cb_encode(ccc): string {\n\t\tlet padlen = [0, 2, 1][ccc.length % 3],\n\t\t\tord = ccc.charCodeAt(0) << 16\n\t\t\t\t| ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n\t\t\t\t| ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n\t\t\tchars = [\n\t\t\t\tTsBase64._b64chars.charAt(ord >>> 18),\n\t\t\t\tTsBase64._b64chars.charAt((ord >>> 12) & 63),\n\t\t\t\tpadlen >= 2 ? '=' : TsBase64._b64chars.charAt((ord >>> 6) & 63),\n\t\t\t\tpadlen >= 1 ? '=' : TsBase64._b64chars.charAt(ord & 63)\n\t\t\t];\n\t\treturn chars.join('');\n\t}\n\n\tprivate static _cb_utob(c: string): string {\n\t\tif (c.length < 2) {\n\t\t\tlet cc = c.charCodeAt(0);\n\t\t\treturn cc < 0x80 ? c\n\t\t\t\t: cc < 0x800 ? (this._fromCharCode(0xc0 | (cc >>> 6))\n\t\t\t\t\t+ this._fromCharCode(0x80 | (cc & 0x3f)))\n\t\t\t\t\t: (this._fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n\t\t\t\t\t\t+ this._fromCharCode(0x80 | ((cc >>> 6) & 0x3f))\n\t\t\t\t\t\t+ this._fromCharCode(0x80 | (cc & 0x3f)));\n\t\t} else {\n\t\t\tlet cc = 0x10000\n\t\t\t\t+ (c.charCodeAt(0) - 0xD800) * 0x400\n\t\t\t\t+ (c.charCodeAt(1) - 0xDC00);\n\t\t\treturn (this._fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n\t\t\t\t+ this._fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n\t\t\t\t+ this._fromCharCode(0x80 | ((cc >>> 6) & 0x3f))\n\t\t\t\t+ this._fromCharCode(0x80 | (cc & 0x3f)));\n\t\t}\n\t}\n\n\tprivate static _re_btou(): RegExp {\n\t\treturn new RegExp([\n\t\t\t'[\\xC0-\\xDF][\\x80-\\xBF]',\n\t\t\t'[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n\t\t\t'[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n\t\t].join('|'), 'g');\n\t}\n\n\tprivate static _atob(a:string): string {\n\t\treturn a.replace(/[\\s\\S]{1,4}/g, this._cb_decode);\n\t}\n\n\tprivate static _btoa(b:string) :string{\n\t\treturn b.replace(/[\\s\\S]{1,3}/g, this._cb_encode);\n\t}\n\n\tprivate static _btou(b:any): string {\n\t\treturn b.replace(this._re_btou, this._cb_btou);\n\t}\n\n\tprivate static _decode(a: string): string {\n\t\tlet _decode = (a) => {\n\t\t\treturn this._btou(atob(a))\n\t\t};\n\t\treturn _decode(\n\t\t\tString(a).replace(/[-_]/g, (m0) => {\n\t\t\t\treturn m0 == '-' ? '+' : '/'\n\t\t\t})\n\t\t\t\t.replace(/[^A-Za-z0-9\\+\\/]/g, '')\n\t\t);\n\t}\n\n\tprivate static _encode(u: string, urisafe: boolean = false): string {\n\t\tlet _encode = (u) => {\n\t\t\treturn this._btoa(this._utob(u))\n\t\t};\n\t\treturn !urisafe\n\t\t\t? _encode(String(u))\n\t\t\t: _encode(String(u)).replace(/[+\\/]/g, m0 => {\n\t\t\t\treturn m0 == '+' ? '-' : '_';\n\t\t\t}).replace(/=/g, '');\n\t}\n\n\tpublic static EncodeURI(u): string {\n\t\treturn this._encode(u, true);\n\t}\n\n\tpublic static FromBase64(c: string): string {\n\t\treturn this._decode(c);\n\t}\n\n\tpublic static ToBase64(u: string): string {\n\t\treturn this._encode(u);\n\t}\n\n\tprivate static _utob(u:string): string {\n\t\treturn u.replace(this._re_utob, this._cb_utob);\n\t}\n\n\tconstructor() {\n\t\tTsBase64._b64tab = () => {\n\t\t\tlet t = {};\n\t\t\tfor (let i = 0, l = TsBase64._b64chars.length; i < l; i++) t[TsBase64._b64chars.charAt(i)] = i;\n\t\t\treturn t;\n\t\t}\n\t}\n}\n"]}